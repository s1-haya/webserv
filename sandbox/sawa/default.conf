server {
	# the port only
	listen 80;
	server_name host host.com;

	# error_page
	error_page 404 /error_pages/404.html

	# client_max_body_size (default 1m?)
	client_max_body_size 1024;

	# alias
	# index
	location / {
		alias /html/;
		index index.html;
	}

	# upload_directory
	# allow_methods
	# autoindex
	location /upload {
		upload_directory /upload;
		allow_methods GET POST DELETE;
		autoindex on;
	}

	# cgi_extension
	location /cgi-bin {
		cgi_extension .pl;
		allow_methods GET POST;
	}

	# GET method not allowed
	location /get_not_allowed {
		allow_methods DELETE;
	}
}

server {
	# the port and host
	listen 127.0.0.1:8080;
	server_name host2;

	# return
	location / {
		alias /html/;
		return 301 index.html;
	}
}

## テストケース
# server
# - listenでportのみ、もしくはhost:portを設定できるかどうか
# - server_nameが設定できるかどうか
# - リクエストにあるHostヘッダフィールドがどの仮想サーバーのserver_nameと一致しない場合、最初に定義された仮想サーバーが応答してるかどうか
# - 設定ファイルが定義したステータスコードとエラーページがレスポンスされてるかどうか？
	# もし設定されたエラーページが存在しない場合、デフォルトのエラーページを返す。
# - ボディメッセージのサイズの上限が超えた場合は、413 Payload Too Largeがレスポンスされてるかどうか？

# location
# - allow_methods: メソッドが許可されてるかどうか（デフォルトはGETメソッドのみ）
# - return: リダイレクトできてるかどうか(300番台以上？？)
# - alias: リクエストターゲットからaliasで定義されたパスかどうか
# - autoindex: ディレクトリリストを表示できてるかどうか
# - index: ディレクトリの場合、設定されてるファイルを返せるかどうか(GETのみ、それ以外はforbidden)
# - cgi_extension: cgiが適用できてるかどうか
# - GET, POSTメソッドを使ってCGIを実行できるかどうか
# - upload_directory: アップロードするディレクトリにファイルが存在するかどうか（POSTメソッドが許可されてない場合は405）


